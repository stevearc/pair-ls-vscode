name: Test and Publish
on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  pull_request:
    branches:
      - "*"
jobs:
  test:
    name: Lint and test
    runs-on: ubuntu-latest
    outputs:
      pair_ls_version: ${{ steps.version.outputs.value }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install
      - run: yarn lint
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: yarn test
      - name: Extract pair-ls version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: "jq .pair_ls_version package.json -r"
  build:
    name: Build
    needs: test
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            bin: pair-ls.exe
          - os: ubuntu-latest
            platform: linux
            arch: x64
            bin: pair-ls-linux64
          - os: macos-latest
            platform: darwin
            arch: x64
            bin: pair-ls-mac
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install
      - name: Download pair-ls
        id: download
        uses: suisei-cn/actions-download-file@v1
        with:
          url: https://github.com/stevearc/pair-ls/releases/download/${{ needs.test.outputs.pair_ls_version }}/${{ matrix.bin }}
      - run: mv ${{ steps.download.outputs.value }} pair-ls
        if: matrix.platform != 'win32'
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - run: npx vsce package --target ${{ env.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.target }}
          path: "*.vsix"
  publish:
    name: Create release and publish
    needs: build
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/download-artifact@v2
      - run: ls *.vsix
      # - run: npx vsce publish --packagePath $(find . -iname *.vsix)
      #   env:
      #     VSCE_PAT: ${{ secrets.VSCE_PAT }}
